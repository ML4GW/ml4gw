Search.setIndex({"docnames": ["index", "installation", "ml4gw", "ml4gw.dataloading", "ml4gw.nn", "ml4gw.nn.autoencoder", "ml4gw.nn.resnet", "ml4gw.nn.streaming", "ml4gw.transforms", "ml4gw.waveforms", "modules"], "filenames": ["index.rst", "installation.rst", "ml4gw.rst", "ml4gw.dataloading.rst", "ml4gw.nn.rst", "ml4gw.nn.autoencoder.rst", "ml4gw.nn.resnet.rst", "ml4gw.nn.streaming.rst", "ml4gw.transforms.rst", "ml4gw.waveforms.rst", "modules.rst"], "titles": ["Welcome to ml4gw's documentation!", "Installation", "ml4gw package", "ml4gw.dataloading package", "ml4gw.nn package", "ml4gw.nn.autoencoder package", "ml4gw.nn.resnet package", "ml4gw.nn.streaming package", "ml4gw.transforms package", "ml4gw.waveforms package", "ml4gw"], "terms": {"thi": [0, 2, 3, 4, 5, 6, 7, 8, 9], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8], "work": 0, "progress": 0, "If": [0, 2, 3, 6, 7, 8], "you": [0, 8], "have": [0, 2, 3, 5, 7, 8], "ani": [0, 2, 3, 8], "question": 0, "suggest": 0, "pleas": [0, 1], "feel": 0, "free": 0, "reach": 0, "out": [0, 2, 4, 6], "ligo": 0, "mit": 0, "edu": 0, "librari": 0, "pytorch": [0, 1, 4, 6], "util": [0, 4], "train": [0, 6], "neural": 0, "network": [0, 2, 6], "servic": 0, "gravit": [0, 2], "wave": 0, "physic": 0, "applic": [0, 6], "The": [0, 2, 3, 5, 6, 7, 8], "code": [0, 2], "can": [0, 2, 3, 5, 6, 7, 8], "found": 0, "github": [0, 2, 6], "http": [0, 1, 2, 3, 6, 8], "com": [0, 2, 6], "instal": 0, "current": [0, 7, 8], "follow": [0, 1], "ar": [0, 1, 2, 5, 6, 8], "us": [0, 1, 2, 3, 4, 6, 8], "support": [0, 1, 2, 6, 7, 8], "research": 0, "afram": 0, "detect": [0, 2, 6], "binari": 0, "black": 0, "hole": 0, "merger": 0, "pe": 0, "paramet": [0, 2, 3, 6, 7, 8, 9], "estim": [0, 8], "signal": [0, 2, 8], "As": [0, 8], "still": 0, "veri": 0, "much": [0, 2], "we": [0, 3, 8], "anticip": 0, "novel": 0, "case": [0, 2, 3], "encount": 0, "error": [0, 6], "stem": 0, "from": [0, 2, 3, 4, 5, 6, 7, 8], "lack": 0, "robust": 0, "encourag": 0, "user": [0, 3, 8], "who": 0, "difficulti": 0, "file": [0, 3], "issu": 0, "ll": [0, 3], "happi": 0, "offer": 0, "extend": 0, "our": 0, "coverag": 0, "new": 0, "improv": [0, 3, 6], "function": [0, 2, 4, 5, 6, 7, 8, 9], "also": [0, 1, 2, 5, 8], "strongli": 0, "ml": 0, "gw": [0, 6], "space": 0, "try": 0, "hand": 0, "join": 0, "collabor": 0, "For": [0, 1, 2, 3, 8], "more": [0, 2, 5, 6, 8], "inform": [0, 5, 8], "about": [0, 5, 8], "how": [0, 1, 2, 5, 7], "get": [0, 6], "involv": 0, "By": [0, 8], "bring": 0, "hope": 0, "truli": 0, "gener": [0, 2, 3, 5, 6], "purpos": 0, "tool": [0, 1, 2], "which": [0, 1, 2, 3, 4, 5, 6, 7, 8], "make": [0, 4, 6], "dl": 0, "access": 0, "physicist": 0, "everywher": 0, "grate": 0, "u": 0, "nation": 0, "scienc": 0, "foundat": 0, "nsf": 0, "har": 0, "data": [0, 2, 3, 5, 8], "revolut": 0, "hdr": 0, "institut": 0, "acceler": 0, "ai": 0, "algorithm": 0, "driven": 0, "discoveri": 0, "a3d3": 0, "under": 0, "cooper": 0, "agreement": 0, "No": 0, "phy": 0, "2117997": 0, "ml4gw": 1, "To": [1, 2, 8], "build": [1, 3, 5, 6, 8], "specif": [1, 2, 7], "version": [1, 4, 6], "cuda": 1, "see": [1, 2, 3, 5, 8], "instruct": 1, "specifi": [1, 2, 3, 5, 7, 8], "desir": [1, 2, 8], "torch": [1, 2, 4, 5, 8], "extra": [1, 6], "index": [1, 2, 3], "url": 1, "flag": [1, 6], "exampl": [1, 2], "1": [1, 2, 3, 5, 6, 8, 9], "12": 1, "11": 1, "6": 1, "command": [1, 4], "0": [1, 2, 6, 8, 9], "download": 1, "org": [1, 2, 3, 8], "whl": 1, "cu116": 1, "fulli": 1, "compat": 1, "pyproject": 1, "toml": 1, "set": [1, 2, 3, 5, 8], "up": [1, 2, 6, 7, 9], "like": 1, "depend": 1, "python": 1, "3": [1, 2, 6, 8, 9], "8": 1, "10": 1, "sourc": [1, 2], "name": [1, 2], "secondari": 1, "true": [1, 3, 7, 8], "default": [1, 6, 8], "fals": [1, 3, 5, 6, 8], "built": [1, 2], "dataload": 2, "nn": 2, "transform": 2, "waveform": 2, "class": [2, 3, 4, 5, 6, 7, 8, 9], "signalinvert": 2, "prob": 2, "5": [2, 9], "base": [2, 3, 4, 6, 7, 8, 9], "take": [2, 3, 4, 5, 6, 7, 8, 9], "tensor": [2, 3, 6, 7, 8], "timeseri": [2, 3, 6, 7, 8], "arbitrari": [2, 5, 6], "dimens": [2, 3, 7, 8], "randomli": [2, 3], "invert": 2, "e": [2, 3, 6, 8, 9], "h": 2, "t": [2, 3, 5, 6, 8], "each": [2, 3, 5, 6, 7, 8], "probabl": 2, "float": [2, 3, 8, 9], "forward": [2, 4, 5, 6, 7, 8, 9], "x": [2, 3, 4, 5, 6, 8], "defin": [2, 4, 5, 6, 7, 8, 9], "comput": [2, 4, 5, 6, 7, 8, 9], "perform": [2, 3, 4, 5, 6, 7, 8, 9], "everi": [2, 4, 5, 6, 7, 8, 9], "call": [2, 3, 4, 5, 6, 7, 8, 9], "should": [2, 3, 4, 5, 6, 7, 8, 9], "overridden": [2, 4, 5, 6, 7, 8, 9], "all": [2, 3, 4, 5, 6, 7, 8, 9], "subclass": [2, 4, 5, 6, 7, 8, 9], "although": [2, 4, 5, 6, 7, 8, 9], "recip": [2, 4, 5, 6, 7, 8, 9], "pass": [2, 4, 5, 6, 7, 8, 9], "need": [2, 4, 5, 6, 7, 8, 9], "within": [2, 3, 4, 5, 6, 7, 8, 9], "one": [2, 3, 4, 5, 6, 7, 8, 9], "instanc": [2, 4, 5, 6, 7, 8, 9], "afterward": [2, 4, 5, 6, 7, 8, 9], "instead": [2, 4, 5, 6, 7, 8, 9], "sinc": [2, 4, 5, 6, 7, 8, 9], "former": [2, 4, 5, 6, 7, 8, 9], "care": [2, 3, 4, 5, 6, 7, 8, 9], "run": [2, 4, 5, 6, 7, 8, 9], "regist": [2, 4, 5, 6, 7, 8, 9], "hook": [2, 4, 5, 6, 7, 8, 9], "while": [2, 4, 5, 6, 7, 8, 9], "latter": [2, 3, 4, 5, 6, 7, 8, 9], "silent": [2, 4, 5, 6, 7, 8, 9], "ignor": [2, 4, 5, 6, 7, 8, 9], "them": [2, 4, 5, 6, 7, 8, 9], "signalrevers": 2, "revers": [2, 8], "kernel": [2, 6, 7], "contain": [2, 3, 5], "callabl": [2, 4, 9], "sampl": [2, 3, 7, 8, 9], "map": [2, 4, 6, 7], "an": [2, 3, 4, 5, 6, 8], "integ": [2, 3, 4], "n": [2, 3, 8, 9], "1d": [2, 6, 8], "correspond": [2, 3, 5, 7, 8], "cosin": 2, "low": 2, "5708": 2, "high": [2, 3], "validate_arg": 2, "none": [2, 3, 4, 5, 6, 7, 8], "transformeddistribut": 2, "arg_constraint": 2, "log_prob": 2, "valu": [2, 7, 8, 9], "return": [2, 3, 6, 7, 8], "log": 2, "densiti": [2, 8], "mass": [2, 9], "evalu": 2, "rsampl": 2, "sample_shap": 2, "size": [2, 3, 6, 7, 8], "shape": [2, 3, 5, 7, 8], "reparameter": 2, "batch": [2, 3, 6, 7, 8], "deltafunct": 2, "peak": 2, "lognorm": 2, "mean": [2, 3, 8], "std": [2, 8], "constrain": 2, "real": 2, "half": [2, 8], "line": [2, 4], "lower_bound": 2, "inf": 2, "loguniform": 2, "uniform": 2, "powerlaw": 2, "minimum": 2, "maximum": [2, 3, 8], "power": [2, 8], "law": 2, "math": 2, "p": 2, "pprox": 2, "lpha": 2, "alpha": 2, "cannot": 2, "equival": 2, "could": 2, "univers": 2, "nois": 2, "ratio": 2, "snr": 2, "uniformli": [2, 3], "volum": 2, "ho": 2, "ho_0": 2, "4": [2, 6, 9], "where": [2, 3, 6, 8], "repres": [2, 6, 8], "consid": 2, "schutz": 2, "2011": 2, "Or": 2, "2": [2, 3, 6, 8], "euclidean": 2, "greaterthaneq": 2, "sine": [2, 9], "1416": 2, "manipul": 2, "raw": 2, "project": 2, "onto": 2, "interferomet": 2, "respons": [2, 8], "extens": [2, 6], "implement": [2, 4, 6, 8], "made": 2, "avail": [2, 8], "bilbi": 2, "arxiv": 2, "ab": 2, "1811": 2, "02042": 2, "here": [2, 5], "lscsoft": 2, "blob": [2, 6], "master": 2, "detector": 2, "py": [2, 5, 6], "breath": 2, "m": [2, 8], "compute_antenna_respons": 2, "theta": 2, "psi": [2, 8], "phi": [2, 8], "detector_tensor": 2, "mode": 2, "antenna": 2, "pattern": 2, "factor": [2, 3, 6], "sky": 2, "well": 2, "whose": 2, "being": [2, 3, 7], "calcul": [2, 8, 9], "angl": 2, "radian": 2, "rel": 2, "celesti": 2, "equat": 2, "between": [2, 6, 7, 8], "": [2, 3, 5, 7, 8], "natur": 2, "polar": [2, 8], "basi": 2, "ha": [2, 3, 8], "0th": [2, 3], "unit": [2, 3, 8], "vector": [2, 5], "point": 2, "along": [2, 3], "right": [2, 8], "ascens": 2, "geocent": 2, "stack": [2, 3, 5], "axi": [2, 3, 6], "list": [2, 6, 8], "str": [2, 3, 8], "A": [2, 6, 8], "compute_ifo_snr": 2, "psd": [2, 8], "sample_r": [2, 3, 8, 9], "highpass": [2, 8], "individu": [2, 3], "respect": [2, 8], "background": [2, 8], "th": 2, "j": 2, "rho_": 2, "ij": 2, "int_": 2, "f_": 2, "text": 2, "min": 2, "max": 2, "frac": 2, "tild": 2, "h_": 2, "f": [2, 9], "s_n": 2, "df": 2, "frequenc": [2, 8], "denot": 2, "nyquist": 2, "dictat": 2, "indic": [2, 3, 6], "fourier": 2, "inteferomet": 2, "its": [2, 5, 8], "complex": 2, "conjug": 2, "backround": 2, "side": 2, "been": [2, 3], "2d": [2, 6, 8], "row": 2, "assum": [2, 8], "channel": [2, 3, 4, 5, 6, 7, 8], "_every_": [2, 3], "element": [2, 3, 6], "3d": [2, 8], "therefor": [2, 7], "first": [2, 3, 6, 7, 8], "two": [2, 8], "match": [2, 5, 8], "upon": [2, 3], "resolut": [2, 3, 8], "provid": [2, 3, 8], "union": [2, 3], "abov": 2, "pre": [2, 8], "mask": 2, "compon": 2, "left": [2, 3, 6, 7, 8], "contribut": 2, "compute_network_snr": 2, "total": [2, 3, 6], "rho_i": 2, "sqrt": 2, "sum_": 2, "number": [2, 3, 4, 5, 6, 7, 8], "across": [2, 8], "compute_observed_strain": 2, "dec": [2, 8], "detector_vertic": 2, "strain": 2, "observ": 2, "given": [2, 3, 8], "declin": 2, "north": 2, "vertic": 2, "spatial": 2, "locat": 2, "delai": 2, "site": 2, "avoid": [2, 8], "ad": 2, "reset": 2, "your": 2, "coordin": 2, "rate": [2, 8, 9], "polarzi": 2, "allow": [2, 8], "cross": [2, 8], "plu": 2, "get_ifo_geometri": 2, "ifo": [2, 8], "retriev": 2, "concaten": 2, "associ": 2, "those": 2, "geometri": 2, "tupl": [2, 7], "outer": 2, "y": [2, 3, 8], "product": 2, "reweight_snr": 2, "target_snr": [2, 8], "scale": [2, 6, 8], "thei": [2, 5], "either": [2, 3, 6, 8], "singl": [2, 3, 7, 8], "rescal": 2, "shift_respons": 2, "sever": 2, "detail": [2, 3], "deriv": 2, "scipi": 2, "csd": 2, "welch": [2, 8], "info": [2, 5], "doc": [2, 3], "refer": 2, "html": [2, 3], "fast_spectral_dens": [2, 8], "nperseg": 2, "nstride": 2, "window": [2, 3, 7, 8], "averag": [2, 7, 8], "median": [2, 8], "multichannel": [2, 3, 7, 8], "non": [2, 3], "exact": [2, 8], "lowest": [2, 8], "bin": [2, 8], "center": 2, "entir": [2, 3, 6], "rather": [2, 6], "than": [2, 3, 4, 6, 8], "per": 2, "benefit": 2, "faster": [2, 4, 8], "might": 2, "benefici": 2, "go": 2, "discard": 2, "anywai": 2, "fft": [2, 8], "batch_siz": [2, 3, 7], "num_channel": [2, 3, 4, 7, 8], "length": [2, 3, 8], "int": [2, 3, 6, 7, 8], "includ": [2, 6], "stride": [2, 3, 5, 6, 8], "arrai": [2, 3, 8], "multipli": 2, "befor": [2, 3, 7], "d": 2, "relat": 2, "output": [2, 5, 6, 7, 8], "g": [2, 3, 6, 8], "let": 2, "equal": [2, 6, 7, 8], "sum": [2, 6, 7], "give": 2, "hz": [2, 8], "aggreg": [2, 8], "option": [2, 3, 6, 7, 8], "otherwis": [2, 3, 6, 7, 8], "must": [2, 3, 8], "assumpt": 2, "multi": [2, 3, 8], "In": [2, 6, 8], "so": [2, 3, 6], "same": [2, 3, 5, 8, 9], "differ": [2, 7, 8], "sill": 2, "_all_": 2, "numpi": 2, "behavior": 2, "even": 2, "bia": 2, "correct": 2, "main": [2, 6], "_spectral_pi": 2, "l2066": 2, "noqa": 2, "normalize_by_psd": 2, "pad": [2, 6], "spectral_dens": 2, "slower": [2, 8], "fast": [2, 8], "truncate_inverse_power_spectrum": 2, "fdurat": [2, 8], "truncat": [2, 8], "time": [2, 3, 4, 6, 7, 8], "domain": [2, 8], "whiten": 2, "filter": [2, 8], "second": [2, 8, 9], "meant": [2, 6], "mitig": 2, "impact": 2, "sharp": 2, "featur": [2, 6], "caus": 2, "longer": [2, 6, 8], "segment": 2, "appli": [2, 8], "adapt": 2, "vivinousi": 2, "deep": 2, "learn": 2, "203966cc2ee47c32c292be000fb009a16824b7d9": 2, "l8": 2, "spectraul": 2, "construct": 2, "taper": 2, "edg": [2, 7, 8], "hann": [2, 8], "zero": [2, 8], "below": [2, 8], "modifi": 2, "possibli": [2, 8], "roughli": 2, "invers": 2, "squar": 2, "root": 2, "ensur": 2, "approxim": [2, 8], "after": [2, 5, 6], "dimenion": 2, "moreov": 2, "remov": [2, 8], "account": 2, "settl": [2, 8], "trim": 2, "chunkedtimeseriesdataset": 3, "chunk_it": 3, "kernel_s": [3, 5, 6], "batches_per_chunk": 3, "coincid": 3, "devic": 3, "cpu": 3, "iterabledataset": 3, "wrapper": 3, "dataset": 3, "loop": 3, "through": 3, "chunk": 3, "produc": [3, 7], "anoth": 3, "iter": 3, "c": [3, 8], "less": [3, 8], "move": 3, "next": [3, 7], "fewer": 3, "lower": 3, "likelihood": 3, "duplic": 3, "increas": 3, "load": 3, "overhead": 3, "bool": [3, 6, 8], "whether": [3, 6, 8], "coincident": 3, "consist": 3, "timestep": 3, "independ": 3, "other": [3, 5, 8], "except": [3, 5], "contiguoushdf5warn": 3, "warn": 3, "hdf5timeseriesdataset": 3, "fname": 3, "batches_per_epoch": 3, "hdf5": 3, "It": 3, "_strongly_": 3, "recommend": 3, "written": 3, "storag": 3, "h5py": 3, "en": [3, 8], "stabl": 3, "shown": 3, "read": 3, "speed": 3, "over": [3, 7, 8], "order": [3, 8], "magnitud": 3, "sequenc": [3, 7], "path": 3, "dim": 3, "dure": [3, 8], "last": [3, 5, 7, 8], "__iter__": 3, "filenam": 3, "limit": 3, "amount": [3, 8], "entropi": 3, "effect": [3, 8], "2x": 3, "throughput": 3, "sample_batch": 3, "type": [3, 6, 8, 9], "sample_fnam": 3, "ndarrai": 3, "inmemorydataset": 3, "32": 3, "shuffl": 3, "memori": 3, "store": [3, 8], "onc": 3, "fix": [3, 8], "precis": 3, "mechan": 3, "determin": [3, 6, 8], "combin": [3, 5, 8], "keyword": [3, 8], "argument": [3, 5, 8], "descript": 3, "1st": 3, "target": [3, 8], "onli": [3, 8], "both": 3, "note": [3, 8], "sensibl": 3, "wai": 3, "align": 3, "permit": 3, "Will": 3, "possibl": [3, 8], "shorter": [3, 6], "due": [3, 6, 8], "multipl": [3, 7, 8], "obvious": 3, "reduc": 3, "rais": [3, 6, 8], "stopiter": 3, "until": 3, "exhaust": 3, "small": 3, "enough": 3, "abl": [3, 8], "fulfil": 3, "otheris": 3, "valueerror": 3, "_not_": [3, 6], "fastest": 3, "host": 3, "init_indic": 3, "initi": [3, 6], "slice": 3, "help": 3, "random": 3, "upfront": 3, "properti": [3, 8], "num_kernel": 3, "autoencod": 4, "decod": [4, 5], "encod": [4, 5], "convolut": [4, 6, 8], "convblock": [4, 5], "convolutionalautoencod": [4, 5], "skip_connect": 4, "addskipconnect": [4, 5], "concatskipconnect": [4, 5], "get_out_channel": [4, 5], "skipconnect": [4, 5], "match_siz": [4, 5], "resnet": 4, "resnet_1d": 4, "basicblock": [4, 6], "expans": [4, 6], "bottleneck": [4, 6], "bottleneckresnet1d": [4, 6], "block": [4, 5, 6], "resnet1d": [4, 6], "conv1": [4, 6], "convn": [4, 6], "resnet_2d": 4, "bottleneckresnet2d": [4, 6], "resnet2d": [4, 6], "stream": 4, "online_averag": 4, "onlineaverag": [4, 7], "get_initial_st": [4, 7], "snapshott": 4, "groupnorm1d": 4, "num_group": 4, "ep": 4, "1e": 4, "05": 4, "custom": 4, "groupnorm": [4, 6], "box": 4, "infer": [4, 7], "groupnorm1dgett": 4, "group": [4, 5, 6], "object": 4, "normlay": 4, "parameter": 4, "jsonargpars": 4, "groupnorm2dgett": 4, "some": 5, "basic": [5, 6], "method": [5, 8], "sequenti": 5, "act": 5, "input": [5, 6, 7, 8], "just": 5, "step": [5, 7, 8], "isn": 5, "explicitli": 5, "enforc": 5, "good": 5, "rule": 5, "thumb": 5, "ouput": 5, "_input_": 5, "accept": 5, "layer": [5, 6], "what": [5, 8], "expect": [5, 7, 8], "oper": 5, "state": [5, 7], "return_st": 5, "in_channel": [5, 6], "encode_channel": 5, "activ": 5, "relu": 5, "norm": [5, 6], "batchnorm": 5, "batchnorm1d": 5, "decode_channel": 5, "output_activ": 5, "share": 5, "input_s": 5, "arg": [5, 8], "kwarg": [5, 7, 8], "target_s": 5, "larg": 6, "part": 6, "lift": 6, "vision": 6, "torchvis": 6, "model": [6, 7], "sens": 6, "most": 6, "statist": 6, "simul": 6, "inplan": 6, "plane": 6, "downsampl": 6, "base_width": 6, "64": 6, "dilat": 6, "norm_lay": 6, "structur": 6, "rtype": [6, 7, 8], "compar": 6, "_downsize_": 6, "expand": 6, "zero_init_residu": 6, "width_per_group": 6, "stride_typ": 6, "alia": 6, "architectur": 6, "simpl": 6, "bbh": 6, "residu": 6, "50": 6, "resnet50": 6, "vanilla": 6, "bottleneckresnet": 6, "weight": 6, "ident": [6, 8], "result": 6, "induc": 6, "local": 6, "connect": 6, "subsequ": [6, 7], "global": 6, "won": [6, 8], "wil": 6, "when": [6, 7, 8], "width": 6, "typic": 6, "meaningless": 6, "liter": 6, "achiev": [6, 8], "in_plan": 6, "out_plan": 6, "conv1d": 6, "norm_group": 6, "throughout": 6, "equilav": 6, "layernorm": 6, "conv2d": 6, "update_s": 7, "num_upd": 7, "offset": 7, "onlin": 7, "overlap": [7, 8], "At": 7, "present": 7, "predict": 7, "underestim": 7, "separ": 7, "timestamp": 7, "throw": 7, "awai": 7, "front": 7, "updat": 7, "snapshot_s": 7, "stride_s": 7, "channels_per_snapshot": 7, "convert": [7, 8], "snaphot": 7, "via": [7, 8], "len": 7, "replac": 7, "snapshot": 7, "split": 7, "add": 7, "shiftedpearsoncorrel": 8, "max_shift": 8, "correl": 8, "wikipedia": 8, "wiki": 8, "pearson_correlation_coeffici": 8, "shift": 8, "direct": 8, "want": 8, "alwai": 8, "b": 8, "do": 8, "requisit": 8, "beforehand": 8, "todo": 8, "coeffici": 8, "channelwisescal": 8, "fittabletransform": 8, "varianc": 8, "standard": 8, "deviat": 8, "fit": 8, "wise": 8, "snrrescal": 8, "waveform_dur": 8, "dtype": 8, "float32": 8, "fittablespectraltransform": 8, "fftlength": 8, "spectraldens": 8, "On": 8, "relationship": 8, "document": 8, "notimplementederror": 8, "doe": 8, "cost": 8, "multiresolutionspectrogram": 8, "kernel_length": 8, "creat": 8, "normal": 8, "nearest": 8, "frequnci": 8, "largest": 8, "among": 8, "turn": 8, "torchaudio": 8, "greater": 8, "normalize_psd": 8, "num_freq": 8, "param": 8, "waveformprojector": 8, "waveformsampl": 8, "fixedwhiten": 8, "float64": 8, "datatyp": 8, "resampl": 8, "self": 8, "impuls": 8, "spectrum": 8, "handl": 8, "narrow": 8, "spike": 8, "expens": 8, "captur": 8, "alreadi": 8, "frame": 8, "don": 8, "requir": 8, "convers": 8, "cutoff": 8, "_before_": 8, "distribut": 8, "uniti": 8, "worth": 8, "crop": 8, "start": 8, "ndim": 8, "consult": 8, "parametersampl": 9, "waveformgener": 9, "parameter_sampl": 9, "ampintcolfitcoeff": 9, "eta": 9, "eta2": 9, "xi": 9, "finalspin0815": 9, "chi1": 9, "chi2": 9, "imrphenomd": 9, "chirp_mass": 9, "mass_ratio": 9, "distanc": 9, "phic": 9, "inclin": 9, "f_ref": 9, "hp": 9, "hc": 9, "phenominternal_eradrational0815": 9, "alpha1fit": 9, "alpha2fit": 9, "alpha3fit": 9, "alpha4fit": 9, "alpha5fit": 9, "beta1fit": 9, "beta2fit": 9, "beta3fit": 9, "chipn": 9, "seta": 9, "delta_valu": 9, "f1": 9, "f2": 9, "f3": 9, "v1": 9, "v2": 9, "v3": 9, "d1": 9, "d2": 9, "fmaxcalc": 9, "frd": 9, "fdm": 9, "gamma2": 9, "gamma3": 9, "fring_fdamp": 9, "gamma1_fun": 9, "gamma2_fun": 9, "gamma3_fun": 9, "phenom_d_amp": 9, "mf": 9, "mass_1": 9, "mass_2": 9, "chi12": 9, "chi22": 9, "phenom_d_htild": 9, "phenom_d_inspiral_amp": 9, "phenom_d_inspiral_phas": 9, "phenom_d_int_amp": 9, "phenom_d_int_phas": 9, "phenom_d_mrd_amp": 9, "phenom_d_mrd_phas": 9, "phenom_d_phas": 9, "rho1_fun": 9, "rho2_fun": 9, "rho3_fun": 9, "sigma1fit": 9, "sigma2fit": 9, "sigma3fit": 9, "sigma4fit": 9, "sinegaussian": 9, "durat": 9, "gaussian": 9, "semi_major_minor_from_": 9, "gamma": 9, "5772156649015329": 9, "euler": 9, "mascheroni": 9, "constant": 9, "lal": 9, "mpc_sec": 9, "102927125000000": 9, "mpc": 9, "msun_si": 9, "9884098706980507e": 9, "30": 9, "solar": 9, "kg": 9, "mtsun_si": 9, "925490947641267e": 9, "06": 9, "pi": 9, "141592653589793": 9, "archimed": 9, "mass1": 9, "mass2": 9, "pn": 9, "phase": 9, "newtonian": 9, "spa": 9, "amplitud": 9, "taylorf2_amplitud": 9, "tensortyp": 9, "taylorf2_htild": 9, "taylorf2_phas": 9, "inspir": 9, "packag": 10}, "objects": {"": [[2, 0, 0, "-", "ml4gw"]], "ml4gw": [[2, 0, 0, "-", "augmentations"], [3, 0, 0, "-", "dataloading"], [2, 0, 0, "-", "distributions"], [2, 0, 0, "-", "gw"], [4, 0, 0, "-", "nn"], [2, 0, 0, "-", "spectral"], [8, 0, 0, "-", "transforms"], [2, 0, 0, "-", "types"], [9, 0, 0, "-", "waveforms"]], "ml4gw.augmentations": [[2, 1, 1, "", "SignalInverter"], [2, 1, 1, "", "SignalReverser"]], "ml4gw.augmentations.SignalInverter": [[2, 2, 1, "", "forward"]], "ml4gw.augmentations.SignalReverser": [[2, 2, 1, "", "forward"]], "ml4gw.dataloading": [[3, 0, 0, "-", "chunked_dataset"], [3, 0, 0, "-", "hdf5_dataset"], [3, 0, 0, "-", "in_memory_dataset"]], "ml4gw.dataloading.chunked_dataset": [[3, 1, 1, "", "ChunkedTimeSeriesDataset"]], "ml4gw.dataloading.hdf5_dataset": [[3, 3, 1, "", "ContiguousHdf5Warning"], [3, 1, 1, "", "Hdf5TimeSeriesDataset"]], "ml4gw.dataloading.hdf5_dataset.Hdf5TimeSeriesDataset": [[3, 2, 1, "", "sample_batch"], [3, 2, 1, "", "sample_fnames"]], "ml4gw.dataloading.in_memory_dataset": [[3, 1, 1, "", "InMemoryDataset"]], "ml4gw.dataloading.in_memory_dataset.InMemoryDataset": [[3, 2, 1, "", "init_indices"], [3, 4, 1, "", "num_kernels"]], "ml4gw.distributions": [[2, 1, 1, "", "Cosine"], [2, 1, 1, "", "DeltaFunction"], [2, 1, 1, "", "LogNormal"], [2, 1, 1, "", "LogUniform"], [2, 1, 1, "", "PowerLaw"], [2, 1, 1, "", "Sine"]], "ml4gw.distributions.Cosine": [[2, 5, 1, "", "arg_constraints"], [2, 2, 1, "", "log_prob"], [2, 2, 1, "", "rsample"]], "ml4gw.distributions.DeltaFunction": [[2, 5, 1, "", "arg_constraints"], [2, 2, 1, "", "rsample"]], "ml4gw.distributions.LogNormal": [[2, 2, 1, "", "support"]], "ml4gw.distributions.PowerLaw": [[2, 5, 1, "", "support"]], "ml4gw.gw": [[2, 6, 1, "", "breathing"], [2, 6, 1, "", "compute_antenna_responses"], [2, 6, 1, "", "compute_ifo_snr"], [2, 6, 1, "", "compute_network_snr"], [2, 6, 1, "", "compute_observed_strain"], [2, 6, 1, "", "cross"], [2, 6, 1, "", "get_ifo_geometry"], [2, 6, 1, "", "outer"], [2, 6, 1, "", "plus"], [2, 6, 1, "", "reweight_snrs"], [2, 6, 1, "", "shift_responses"]], "ml4gw.nn": [[5, 0, 0, "-", "autoencoder"], [4, 0, 0, "-", "norm"], [6, 0, 0, "-", "resnet"], [7, 0, 0, "-", "streaming"]], "ml4gw.nn.autoencoder": [[5, 0, 0, "-", "base"], [5, 0, 0, "-", "convolutional"], [5, 0, 0, "-", "skip_connection"], [5, 0, 0, "-", "utils"]], "ml4gw.nn.autoencoder.base": [[5, 1, 1, "", "Autoencoder"]], "ml4gw.nn.autoencoder.base.Autoencoder": [[5, 2, 1, "", "decode"], [5, 2, 1, "", "encode"], [5, 2, 1, "", "forward"]], "ml4gw.nn.autoencoder.convolutional": [[5, 1, 1, "", "ConvBlock"], [5, 1, 1, "", "ConvolutionalAutoencoder"]], "ml4gw.nn.autoencoder.convolutional.ConvBlock": [[5, 2, 1, "", "decode"], [5, 2, 1, "", "encode"]], "ml4gw.nn.autoencoder.convolutional.ConvolutionalAutoencoder": [[5, 2, 1, "", "decode"], [5, 2, 1, "", "forward"]], "ml4gw.nn.autoencoder.skip_connection": [[5, 1, 1, "", "AddSkipConnect"], [5, 1, 1, "", "ConcatSkipConnect"], [5, 1, 1, "", "SkipConnection"]], "ml4gw.nn.autoencoder.skip_connection.AddSkipConnect": [[5, 2, 1, "", "forward"]], "ml4gw.nn.autoencoder.skip_connection.ConcatSkipConnect": [[5, 2, 1, "", "forward"], [5, 2, 1, "", "get_out_channels"]], "ml4gw.nn.autoencoder.skip_connection.SkipConnection": [[5, 2, 1, "", "forward"], [5, 2, 1, "", "get_out_channels"]], "ml4gw.nn.autoencoder.utils": [[5, 6, 1, "", "match_size"]], "ml4gw.nn.norm": [[4, 1, 1, "", "GroupNorm1D"], [4, 1, 1, "", "GroupNorm1DGetter"], [4, 1, 1, "", "GroupNorm2DGetter"]], "ml4gw.nn.norm.GroupNorm1D": [[4, 2, 1, "", "forward"]], "ml4gw.nn.resnet": [[6, 0, 0, "-", "resnet_1d"], [6, 0, 0, "-", "resnet_2d"]], "ml4gw.nn.resnet.resnet_1d": [[6, 1, 1, "", "BasicBlock"], [6, 1, 1, "", "Bottleneck"], [6, 1, 1, "", "BottleneckResNet1D"], [6, 1, 1, "", "ResNet1D"], [6, 6, 1, "", "conv1"], [6, 6, 1, "", "convN"]], "ml4gw.nn.resnet.resnet_1d.BasicBlock": [[6, 5, 1, "", "expansion"], [6, 2, 1, "", "forward"]], "ml4gw.nn.resnet.resnet_1d.Bottleneck": [[6, 5, 1, "", "expansion"], [6, 2, 1, "", "forward"]], "ml4gw.nn.resnet.resnet_1d.BottleneckResNet1D": [[6, 5, 1, "", "block"]], "ml4gw.nn.resnet.resnet_1d.ResNet1D": [[6, 5, 1, "", "block"], [6, 2, 1, "", "forward"]], "ml4gw.nn.resnet.resnet_2d": [[6, 1, 1, "", "BasicBlock"], [6, 1, 1, "", "Bottleneck"], [6, 1, 1, "", "BottleneckResNet2D"], [6, 1, 1, "", "ResNet2D"], [6, 6, 1, "", "conv1"], [6, 6, 1, "", "convN"]], "ml4gw.nn.resnet.resnet_2d.BasicBlock": [[6, 5, 1, "", "expansion"], [6, 2, 1, "", "forward"]], "ml4gw.nn.resnet.resnet_2d.Bottleneck": [[6, 5, 1, "", "expansion"], [6, 2, 1, "", "forward"]], "ml4gw.nn.resnet.resnet_2d.BottleneckResNet2D": [[6, 5, 1, "", "block"]], "ml4gw.nn.resnet.resnet_2d.ResNet2D": [[6, 5, 1, "", "block"], [6, 2, 1, "", "forward"]], "ml4gw.nn.streaming": [[7, 0, 0, "-", "online_average"], [7, 0, 0, "-", "snapshotter"]], "ml4gw.nn.streaming.online_average": [[7, 1, 1, "", "OnlineAverager"]], "ml4gw.nn.streaming.online_average.OnlineAverager": [[7, 2, 1, "", "forward"], [7, 2, 1, "", "get_initial_state"]], "ml4gw.nn.streaming.snapshotter": [[7, 1, 1, "", "Snapshotter"]], "ml4gw.nn.streaming.snapshotter.Snapshotter": [[7, 2, 1, "", "forward"], [7, 2, 1, "", "get_initial_state"]], "ml4gw.spectral": [[2, 6, 1, "", "fast_spectral_density"], [2, 6, 1, "", "median"], [2, 6, 1, "", "normalize_by_psd"], [2, 6, 1, "", "spectral_density"], [2, 6, 1, "", "truncate_inverse_power_spectrum"], [2, 6, 1, "", "whiten"]], "ml4gw.transforms": [[8, 0, 0, "-", "pearson"], [8, 0, 0, "-", "scaler"], [8, 0, 0, "-", "snr_rescaler"], [8, 0, 0, "-", "spectral"], [8, 0, 0, "-", "spectrogram"], [8, 0, 0, "-", "transform"], [8, 0, 0, "-", "waveforms"], [8, 0, 0, "-", "whitening"]], "ml4gw.transforms.pearson": [[8, 1, 1, "", "ShiftedPearsonCorrelation"]], "ml4gw.transforms.pearson.ShiftedPearsonCorrelation": [[8, 2, 1, "", "forward"]], "ml4gw.transforms.scaler": [[8, 1, 1, "", "ChannelWiseScaler"]], "ml4gw.transforms.scaler.ChannelWiseScaler": [[8, 2, 1, "", "fit"], [8, 2, 1, "", "forward"]], "ml4gw.transforms.snr_rescaler": [[8, 1, 1, "", "SnrRescaler"]], "ml4gw.transforms.snr_rescaler.SnrRescaler": [[8, 2, 1, "", "fit"], [8, 2, 1, "", "forward"]], "ml4gw.transforms.spectral": [[8, 1, 1, "", "SpectralDensity"]], "ml4gw.transforms.spectral.SpectralDensity": [[8, 2, 1, "", "forward"]], "ml4gw.transforms.spectrogram": [[8, 1, 1, "", "MultiResolutionSpectrogram"]], "ml4gw.transforms.spectrogram.MultiResolutionSpectrogram": [[8, 2, 1, "", "forward"]], "ml4gw.transforms.transform": [[8, 1, 1, "", "FittableSpectralTransform"], [8, 1, 1, "", "FittableTransform"]], "ml4gw.transforms.transform.FittableSpectralTransform": [[8, 2, 1, "", "normalize_psd"]], "ml4gw.transforms.transform.FittableTransform": [[8, 2, 1, "", "build"]], "ml4gw.transforms.waveforms": [[8, 1, 1, "", "WaveformProjector"], [8, 1, 1, "", "WaveformSampler"]], "ml4gw.transforms.waveforms.WaveformProjector": [[8, 2, 1, "", "forward"]], "ml4gw.transforms.waveforms.WaveformSampler": [[8, 2, 1, "", "forward"]], "ml4gw.transforms.whitening": [[8, 1, 1, "", "FixedWhiten"], [8, 1, 1, "", "Whiten"]], "ml4gw.transforms.whitening.FixedWhiten": [[8, 2, 1, "", "fit"], [8, 2, 1, "", "forward"]], "ml4gw.transforms.whitening.Whiten": [[8, 2, 1, "", "forward"]], "ml4gw.waveforms": [[9, 0, 0, "-", "generator"], [9, 0, 0, "-", "phenom_d"], [9, 0, 0, "-", "phenom_d_data"], [9, 0, 0, "-", "sine_gaussian"], [9, 0, 0, "-", "taylorf2"]], "ml4gw.waveforms.generator": [[9, 1, 1, "", "ParameterSampler"], [9, 1, 1, "", "WaveformGenerator"]], "ml4gw.waveforms.generator.ParameterSampler": [[9, 2, 1, "", "forward"]], "ml4gw.waveforms.generator.WaveformGenerator": [[9, 2, 1, "", "forward"]], "ml4gw.waveforms.phenom_d": [[9, 6, 1, "", "AmpIntColFitCoeff"], [9, 6, 1, "", "FinalSpin0815"], [9, 6, 1, "", "IMRPhenomD"], [9, 6, 1, "", "PhenomInternal_EradRational0815"], [9, 6, 1, "", "alpha1Fit"], [9, 6, 1, "", "alpha2Fit"], [9, 6, 1, "", "alpha3Fit"], [9, 6, 1, "", "alpha4Fit"], [9, 6, 1, "", "alpha5Fit"], [9, 6, 1, "", "beta1Fit"], [9, 6, 1, "", "beta2Fit"], [9, 6, 1, "", "beta3Fit"], [9, 6, 1, "", "chiPN"], [9, 6, 1, "", "delta_values"], [9, 6, 1, "", "fmaxCalc"], [9, 6, 1, "", "fring_fdamp"], [9, 6, 1, "", "gamma1_fun"], [9, 6, 1, "", "gamma2_fun"], [9, 6, 1, "", "gamma3_fun"], [9, 6, 1, "", "phenom_d_amp"], [9, 6, 1, "", "phenom_d_htilde"], [9, 6, 1, "", "phenom_d_inspiral_amp"], [9, 6, 1, "", "phenom_d_inspiral_phase"], [9, 6, 1, "", "phenom_d_int_amp"], [9, 6, 1, "", "phenom_d_int_phase"], [9, 6, 1, "", "phenom_d_mrd_amp"], [9, 6, 1, "", "phenom_d_mrd_phase"], [9, 6, 1, "", "phenom_d_phase"], [9, 6, 1, "", "rho1_fun"], [9, 6, 1, "", "rho2_fun"], [9, 6, 1, "", "rho3_fun"], [9, 6, 1, "", "sigma1Fit"], [9, 6, 1, "", "sigma2Fit"], [9, 6, 1, "", "sigma3Fit"], [9, 6, 1, "", "sigma4Fit"]], "ml4gw.waveforms.sine_gaussian": [[9, 1, 1, "", "SineGaussian"], [9, 6, 1, "", "semi_major_minor_from_e"]], "ml4gw.waveforms.taylorf2": [[9, 7, 1, "", "GAMMA"], [9, 7, 1, "", "MPC_SEC"], [9, 7, 1, "", "MSUN_SI"], [9, 7, 1, "", "MTSUN_SI"], [9, 7, 1, "", "PI"], [9, 6, 1, "", "TaylorF2"], [9, 6, 1, "", "taylorf2_amplitude"], [9, 6, 1, "", "taylorf2_htilde"], [9, 6, 1, "", "taylorf2_phase"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:exception", "4": "py:property", "5": "py:attribute", "6": "py:function", "7": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "exception", "Python exception"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "function", "Python function"], "7": ["py", "data", "Python data"]}, "titleterms": {"welcom": 0, "ml4gw": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10], "": 0, "document": 0, "content": [0, 2, 3, 4, 5, 6, 7, 8, 9], "project": 0, "develop": 0, "fund": 0, "instal": 1, "pip": 1, "poetri": 1, "packag": [2, 3, 4, 5, 6, 7, 8, 9], "subpackag": [2, 4], "submodul": [2, 3, 4, 5, 6, 7, 8, 9], "augment": 2, "modul": [2, 3, 4, 5, 6, 7, 8, 9], "distribut": 2, "gw": 2, "spectral": [2, 8], "type": 2, "dataload": 3, "chunked_dataset": 3, "hdf5_dataset": 3, "in_memory_dataset": 3, "nn": [4, 5, 6, 7], "norm": 4, "autoencod": 5, "base": 5, "convolut": 5, "skip_connect": 5, "util": 5, "resnet": 6, "resnet_1d": 6, "resnet_2d": 6, "stream": 7, "online_averag": 7, "snapshott": 7, "transform": 8, "pearson": 8, "scaler": 8, "snr_rescal": 8, "spectrogram": 8, "waveform": [8, 9], "whiten": 8, "gener": 9, "phenom_d": 9, "return": 9, "phenom_d_data": 9, "sine_gaussian": 9, "taylorf2": 9}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 58}, "alltitles": {"Welcome to ml4gw's documentation!": [[0, "welcome-to-ml4gw-s-documentation"]], "ml4gw": [[0, "ml4gw"], [10, "ml4gw"]], "Contents:": [[0, null]], "Projects": [[0, "projects"]], "Development": [[0, "development"]], "Funding": [[0, "funding"]], "Installation": [[1, "installation"]], "Pip": [[1, "pip"]], "Poetry": [[1, "poetry"]], "ml4gw package": [[2, "ml4gw-package"]], "Subpackages": [[2, "subpackages"], [4, "subpackages"]], "Submodules": [[2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"]], "ml4gw.augmentations module": [[2, "module-ml4gw.augmentations"]], "ml4gw.distributions module": [[2, "module-ml4gw.distributions"]], "ml4gw.gw module": [[2, "module-ml4gw.gw"]], "ml4gw.spectral module": [[2, "module-ml4gw.spectral"]], "ml4gw.types module": [[2, "module-ml4gw.types"]], "Module contents": [[2, "module-ml4gw"], [3, "module-ml4gw.dataloading"], [4, "module-ml4gw.nn"], [5, "module-ml4gw.nn.autoencoder"], [6, "module-ml4gw.nn.resnet"], [7, "module-ml4gw.nn.streaming"], [8, "module-ml4gw.transforms"], [9, "module-ml4gw.waveforms"]], "ml4gw.dataloading package": [[3, "ml4gw-dataloading-package"]], "ml4gw.dataloading.chunked_dataset module": [[3, "module-ml4gw.dataloading.chunked_dataset"]], "ml4gw.dataloading.hdf5_dataset module": [[3, "module-ml4gw.dataloading.hdf5_dataset"]], "ml4gw.dataloading.in_memory_dataset module": [[3, "module-ml4gw.dataloading.in_memory_dataset"]], "ml4gw.nn package": [[4, "ml4gw-nn-package"]], "ml4gw.nn.norm module": [[4, "module-ml4gw.nn.norm"]], "ml4gw.nn.autoencoder package": [[5, "ml4gw-nn-autoencoder-package"]], "ml4gw.nn.autoencoder.base module": [[5, "module-ml4gw.nn.autoencoder.base"]], "ml4gw.nn.autoencoder.convolutional module": [[5, "module-ml4gw.nn.autoencoder.convolutional"]], "ml4gw.nn.autoencoder.skip_connection module": [[5, "module-ml4gw.nn.autoencoder.skip_connection"]], "ml4gw.nn.autoencoder.utils module": [[5, "module-ml4gw.nn.autoencoder.utils"]], "ml4gw.nn.resnet package": [[6, "ml4gw-nn-resnet-package"]], "ml4gw.nn.resnet.resnet_1d module": [[6, "module-ml4gw.nn.resnet.resnet_1d"]], "ml4gw.nn.resnet.resnet_2d module": [[6, "module-ml4gw.nn.resnet.resnet_2d"]], "ml4gw.nn.streaming package": [[7, "ml4gw-nn-streaming-package"]], "ml4gw.nn.streaming.online_average module": [[7, "module-ml4gw.nn.streaming.online_average"]], "ml4gw.nn.streaming.snapshotter module": [[7, "module-ml4gw.nn.streaming.snapshotter"]], "ml4gw.transforms package": [[8, "ml4gw-transforms-package"]], "ml4gw.transforms.pearson module": [[8, "module-ml4gw.transforms.pearson"]], "ml4gw.transforms.scaler module": [[8, "module-ml4gw.transforms.scaler"]], "ml4gw.transforms.snr_rescaler module": [[8, "module-ml4gw.transforms.snr_rescaler"]], "ml4gw.transforms.spectral module": [[8, "module-ml4gw.transforms.spectral"]], "ml4gw.transforms.spectrogram module": [[8, "module-ml4gw.transforms.spectrogram"]], "ml4gw.transforms.transform module": [[8, "module-ml4gw.transforms.transform"]], "ml4gw.transforms.waveforms module": [[8, "module-ml4gw.transforms.waveforms"]], "ml4gw.transforms.whitening module": [[8, "module-ml4gw.transforms.whitening"]], "ml4gw.waveforms package": [[9, "ml4gw-waveforms-package"]], "ml4gw.waveforms.generator module": [[9, "module-ml4gw.waveforms.generator"]], "ml4gw.waveforms.phenom_d module": [[9, "module-ml4gw.waveforms.phenom_d"]], "Returns:": [[9, "returns"], [9, "id1"]], "ml4gw.waveforms.phenom_d_data module": [[9, "module-ml4gw.waveforms.phenom_d_data"]], "ml4gw.waveforms.sine_gaussian module": [[9, "module-ml4gw.waveforms.sine_gaussian"]], "ml4gw.waveforms.taylorf2 module": [[9, "module-ml4gw.waveforms.taylorf2"]]}, "indexentries": {"cosine (class in ml4gw.distributions)": [[2, "ml4gw.distributions.Cosine"]], "deltafunction (class in ml4gw.distributions)": [[2, "ml4gw.distributions.DeltaFunction"]], "lognormal (class in ml4gw.distributions)": [[2, "ml4gw.distributions.LogNormal"]], "loguniform (class in ml4gw.distributions)": [[2, "ml4gw.distributions.LogUniform"]], "powerlaw (class in ml4gw.distributions)": [[2, "ml4gw.distributions.PowerLaw"]], "signalinverter (class in ml4gw.augmentations)": [[2, "ml4gw.augmentations.SignalInverter"]], "signalreverser (class in ml4gw.augmentations)": [[2, "ml4gw.augmentations.SignalReverser"]], "sine (class in ml4gw.distributions)": [[2, "ml4gw.distributions.Sine"]], "arg_constraints (ml4gw.distributions.cosine attribute)": [[2, "ml4gw.distributions.Cosine.arg_constraints"]], "arg_constraints (ml4gw.distributions.deltafunction attribute)": [[2, "ml4gw.distributions.DeltaFunction.arg_constraints"]], "breathing() (in module ml4gw.gw)": [[2, "ml4gw.gw.breathing"]], "compute_antenna_responses() (in module ml4gw.gw)": [[2, "ml4gw.gw.compute_antenna_responses"]], "compute_ifo_snr() (in module ml4gw.gw)": [[2, "ml4gw.gw.compute_ifo_snr"]], "compute_network_snr() (in module ml4gw.gw)": [[2, "ml4gw.gw.compute_network_snr"]], "compute_observed_strain() (in module ml4gw.gw)": [[2, "ml4gw.gw.compute_observed_strain"]], "cross() (in module ml4gw.gw)": [[2, "ml4gw.gw.cross"]], "fast_spectral_density() (in module ml4gw.spectral)": [[2, "ml4gw.spectral.fast_spectral_density"]], "forward() (ml4gw.augmentations.signalinverter method)": [[2, "ml4gw.augmentations.SignalInverter.forward"]], "forward() (ml4gw.augmentations.signalreverser method)": [[2, "ml4gw.augmentations.SignalReverser.forward"]], "get_ifo_geometry() (in module ml4gw.gw)": [[2, "ml4gw.gw.get_ifo_geometry"]], "log_prob() (ml4gw.distributions.cosine method)": [[2, "ml4gw.distributions.Cosine.log_prob"]], "median() (in module ml4gw.spectral)": [[2, "ml4gw.spectral.median"]], "ml4gw": [[2, "module-ml4gw"]], "ml4gw.augmentations": [[2, "module-ml4gw.augmentations"]], "ml4gw.distributions": [[2, "module-ml4gw.distributions"]], "ml4gw.gw": [[2, "module-ml4gw.gw"]], "ml4gw.spectral": [[2, "module-ml4gw.spectral"]], "ml4gw.types": [[2, "module-ml4gw.types"]], "module": [[2, "module-ml4gw"], [2, "module-ml4gw.augmentations"], [2, "module-ml4gw.distributions"], [2, "module-ml4gw.gw"], [2, "module-ml4gw.spectral"], [2, "module-ml4gw.types"], [3, "module-ml4gw.dataloading"], [3, "module-ml4gw.dataloading.chunked_dataset"], [3, "module-ml4gw.dataloading.hdf5_dataset"], [3, "module-ml4gw.dataloading.in_memory_dataset"], [4, "module-ml4gw.nn"], [4, "module-ml4gw.nn.norm"], [5, "module-ml4gw.nn.autoencoder"], [5, "module-ml4gw.nn.autoencoder.base"], [5, "module-ml4gw.nn.autoencoder.convolutional"], [5, "module-ml4gw.nn.autoencoder.skip_connection"], [5, "module-ml4gw.nn.autoencoder.utils"], [6, "module-ml4gw.nn.resnet"], [6, "module-ml4gw.nn.resnet.resnet_1d"], [6, "module-ml4gw.nn.resnet.resnet_2d"], [7, "module-ml4gw.nn.streaming"], [7, "module-ml4gw.nn.streaming.online_average"], [7, "module-ml4gw.nn.streaming.snapshotter"], [8, "module-ml4gw.transforms"], [8, "module-ml4gw.transforms.pearson"], [8, "module-ml4gw.transforms.scaler"], [8, "module-ml4gw.transforms.snr_rescaler"], [8, "module-ml4gw.transforms.spectral"], [8, "module-ml4gw.transforms.spectrogram"], [8, "module-ml4gw.transforms.transform"], [8, "module-ml4gw.transforms.waveforms"], [8, "module-ml4gw.transforms.whitening"], [9, "module-ml4gw.waveforms"], [9, "module-ml4gw.waveforms.generator"], [9, "module-ml4gw.waveforms.phenom_d"], [9, "module-ml4gw.waveforms.phenom_d_data"], [9, "module-ml4gw.waveforms.sine_gaussian"], [9, "module-ml4gw.waveforms.taylorf2"]], "normalize_by_psd() (in module ml4gw.spectral)": [[2, "ml4gw.spectral.normalize_by_psd"]], "outer() (in module ml4gw.gw)": [[2, "ml4gw.gw.outer"]], "plus() (in module ml4gw.gw)": [[2, "ml4gw.gw.plus"]], "reweight_snrs() (in module ml4gw.gw)": [[2, "ml4gw.gw.reweight_snrs"]], "rsample() (ml4gw.distributions.cosine method)": [[2, "ml4gw.distributions.Cosine.rsample"]], "rsample() (ml4gw.distributions.deltafunction method)": [[2, "ml4gw.distributions.DeltaFunction.rsample"]], "shift_responses() (in module ml4gw.gw)": [[2, "ml4gw.gw.shift_responses"]], "spectral_density() (in module ml4gw.spectral)": [[2, "ml4gw.spectral.spectral_density"]], "support (ml4gw.distributions.powerlaw attribute)": [[2, "ml4gw.distributions.PowerLaw.support"]], "support() (ml4gw.distributions.lognormal method)": [[2, "ml4gw.distributions.LogNormal.support"]], "truncate_inverse_power_spectrum() (in module ml4gw.spectral)": [[2, "ml4gw.spectral.truncate_inverse_power_spectrum"]], "whiten() (in module ml4gw.spectral)": [[2, "ml4gw.spectral.whiten"]], "chunkedtimeseriesdataset (class in ml4gw.dataloading.chunked_dataset)": [[3, "ml4gw.dataloading.chunked_dataset.ChunkedTimeSeriesDataset"]], "contiguoushdf5warning": [[3, "ml4gw.dataloading.hdf5_dataset.ContiguousHdf5Warning"]], "hdf5timeseriesdataset (class in ml4gw.dataloading.hdf5_dataset)": [[3, "ml4gw.dataloading.hdf5_dataset.Hdf5TimeSeriesDataset"]], "inmemorydataset (class in ml4gw.dataloading.in_memory_dataset)": [[3, "ml4gw.dataloading.in_memory_dataset.InMemoryDataset"]], "init_indices() (ml4gw.dataloading.in_memory_dataset.inmemorydataset method)": [[3, "ml4gw.dataloading.in_memory_dataset.InMemoryDataset.init_indices"]], "ml4gw.dataloading": [[3, "module-ml4gw.dataloading"]], "ml4gw.dataloading.chunked_dataset": [[3, "module-ml4gw.dataloading.chunked_dataset"]], "ml4gw.dataloading.hdf5_dataset": [[3, "module-ml4gw.dataloading.hdf5_dataset"]], "ml4gw.dataloading.in_memory_dataset": [[3, "module-ml4gw.dataloading.in_memory_dataset"]], "num_kernels (ml4gw.dataloading.in_memory_dataset.inmemorydataset property)": [[3, "ml4gw.dataloading.in_memory_dataset.InMemoryDataset.num_kernels"]], "sample_batch() (ml4gw.dataloading.hdf5_dataset.hdf5timeseriesdataset method)": [[3, "ml4gw.dataloading.hdf5_dataset.Hdf5TimeSeriesDataset.sample_batch"]], "sample_fnames() (ml4gw.dataloading.hdf5_dataset.hdf5timeseriesdataset method)": [[3, "ml4gw.dataloading.hdf5_dataset.Hdf5TimeSeriesDataset.sample_fnames"]], "groupnorm1d (class in ml4gw.nn.norm)": [[4, "ml4gw.nn.norm.GroupNorm1D"]], "groupnorm1dgetter (class in ml4gw.nn.norm)": [[4, "ml4gw.nn.norm.GroupNorm1DGetter"]], "groupnorm2dgetter (class in ml4gw.nn.norm)": [[4, "ml4gw.nn.norm.GroupNorm2DGetter"]], "forward() (ml4gw.nn.norm.groupnorm1d method)": [[4, "ml4gw.nn.norm.GroupNorm1D.forward"]], "ml4gw.nn": [[4, "module-ml4gw.nn"]], "ml4gw.nn.norm": [[4, "module-ml4gw.nn.norm"]], "addskipconnect (class in ml4gw.nn.autoencoder.skip_connection)": [[5, "ml4gw.nn.autoencoder.skip_connection.AddSkipConnect"]], "autoencoder (class in ml4gw.nn.autoencoder.base)": [[5, "ml4gw.nn.autoencoder.base.Autoencoder"]], "concatskipconnect (class in ml4gw.nn.autoencoder.skip_connection)": [[5, "ml4gw.nn.autoencoder.skip_connection.ConcatSkipConnect"]], "convblock (class in ml4gw.nn.autoencoder.convolutional)": [[5, "ml4gw.nn.autoencoder.convolutional.ConvBlock"]], "convolutionalautoencoder (class in ml4gw.nn.autoencoder.convolutional)": [[5, "ml4gw.nn.autoencoder.convolutional.ConvolutionalAutoencoder"]], "skipconnection (class in ml4gw.nn.autoencoder.skip_connection)": [[5, "ml4gw.nn.autoencoder.skip_connection.SkipConnection"]], "decode() (ml4gw.nn.autoencoder.base.autoencoder method)": [[5, "ml4gw.nn.autoencoder.base.Autoencoder.decode"]], "decode() (ml4gw.nn.autoencoder.convolutional.convblock method)": [[5, "ml4gw.nn.autoencoder.convolutional.ConvBlock.decode"]], "decode() (ml4gw.nn.autoencoder.convolutional.convolutionalautoencoder method)": [[5, "ml4gw.nn.autoencoder.convolutional.ConvolutionalAutoencoder.decode"]], "encode() (ml4gw.nn.autoencoder.base.autoencoder method)": [[5, "ml4gw.nn.autoencoder.base.Autoencoder.encode"]], "encode() (ml4gw.nn.autoencoder.convolutional.convblock method)": [[5, "ml4gw.nn.autoencoder.convolutional.ConvBlock.encode"]], "forward() (ml4gw.nn.autoencoder.base.autoencoder method)": [[5, "ml4gw.nn.autoencoder.base.Autoencoder.forward"]], "forward() (ml4gw.nn.autoencoder.convolutional.convolutionalautoencoder method)": [[5, "ml4gw.nn.autoencoder.convolutional.ConvolutionalAutoencoder.forward"]], "forward() (ml4gw.nn.autoencoder.skip_connection.addskipconnect method)": [[5, "ml4gw.nn.autoencoder.skip_connection.AddSkipConnect.forward"]], "forward() (ml4gw.nn.autoencoder.skip_connection.concatskipconnect method)": [[5, "ml4gw.nn.autoencoder.skip_connection.ConcatSkipConnect.forward"]], "forward() (ml4gw.nn.autoencoder.skip_connection.skipconnection method)": [[5, "ml4gw.nn.autoencoder.skip_connection.SkipConnection.forward"]], "get_out_channels() (ml4gw.nn.autoencoder.skip_connection.concatskipconnect method)": [[5, "ml4gw.nn.autoencoder.skip_connection.ConcatSkipConnect.get_out_channels"]], "get_out_channels() (ml4gw.nn.autoencoder.skip_connection.skipconnection method)": [[5, "ml4gw.nn.autoencoder.skip_connection.SkipConnection.get_out_channels"]], "match_size() (in module ml4gw.nn.autoencoder.utils)": [[5, "ml4gw.nn.autoencoder.utils.match_size"]], "ml4gw.nn.autoencoder": [[5, "module-ml4gw.nn.autoencoder"]], "ml4gw.nn.autoencoder.base": [[5, "module-ml4gw.nn.autoencoder.base"]], "ml4gw.nn.autoencoder.convolutional": [[5, "module-ml4gw.nn.autoencoder.convolutional"]], "ml4gw.nn.autoencoder.skip_connection": [[5, "module-ml4gw.nn.autoencoder.skip_connection"]], "ml4gw.nn.autoencoder.utils": [[5, "module-ml4gw.nn.autoencoder.utils"]], "basicblock (class in ml4gw.nn.resnet.resnet_1d)": [[6, "ml4gw.nn.resnet.resnet_1d.BasicBlock"]], "basicblock (class in ml4gw.nn.resnet.resnet_2d)": [[6, "ml4gw.nn.resnet.resnet_2d.BasicBlock"]], "bottleneck (class in ml4gw.nn.resnet.resnet_1d)": [[6, "ml4gw.nn.resnet.resnet_1d.Bottleneck"]], "bottleneck (class in ml4gw.nn.resnet.resnet_2d)": [[6, "ml4gw.nn.resnet.resnet_2d.Bottleneck"]], "bottleneckresnet1d (class in ml4gw.nn.resnet.resnet_1d)": [[6, "ml4gw.nn.resnet.resnet_1d.BottleneckResNet1D"]], "bottleneckresnet2d (class in ml4gw.nn.resnet.resnet_2d)": [[6, "ml4gw.nn.resnet.resnet_2d.BottleneckResNet2D"]], "resnet1d (class in ml4gw.nn.resnet.resnet_1d)": [[6, "ml4gw.nn.resnet.resnet_1d.ResNet1D"]], "resnet2d (class in ml4gw.nn.resnet.resnet_2d)": [[6, "ml4gw.nn.resnet.resnet_2d.ResNet2D"]], "block (ml4gw.nn.resnet.resnet_1d.bottleneckresnet1d attribute)": [[6, "ml4gw.nn.resnet.resnet_1d.BottleneckResNet1D.block"]], "block (ml4gw.nn.resnet.resnet_1d.resnet1d attribute)": [[6, "ml4gw.nn.resnet.resnet_1d.ResNet1D.block"]], "block (ml4gw.nn.resnet.resnet_2d.bottleneckresnet2d attribute)": [[6, "ml4gw.nn.resnet.resnet_2d.BottleneckResNet2D.block"]], "block (ml4gw.nn.resnet.resnet_2d.resnet2d attribute)": [[6, "ml4gw.nn.resnet.resnet_2d.ResNet2D.block"]], "conv1() (in module ml4gw.nn.resnet.resnet_1d)": [[6, "ml4gw.nn.resnet.resnet_1d.conv1"]], "conv1() (in module ml4gw.nn.resnet.resnet_2d)": [[6, "ml4gw.nn.resnet.resnet_2d.conv1"]], "convn() (in module ml4gw.nn.resnet.resnet_1d)": [[6, "ml4gw.nn.resnet.resnet_1d.convN"]], "convn() (in module ml4gw.nn.resnet.resnet_2d)": [[6, "ml4gw.nn.resnet.resnet_2d.convN"]], "expansion (ml4gw.nn.resnet.resnet_1d.basicblock attribute)": [[6, "ml4gw.nn.resnet.resnet_1d.BasicBlock.expansion"]], "expansion (ml4gw.nn.resnet.resnet_1d.bottleneck attribute)": [[6, "ml4gw.nn.resnet.resnet_1d.Bottleneck.expansion"]], "expansion (ml4gw.nn.resnet.resnet_2d.basicblock attribute)": [[6, "ml4gw.nn.resnet.resnet_2d.BasicBlock.expansion"]], "expansion (ml4gw.nn.resnet.resnet_2d.bottleneck attribute)": [[6, "ml4gw.nn.resnet.resnet_2d.Bottleneck.expansion"]], "forward() (ml4gw.nn.resnet.resnet_1d.basicblock method)": [[6, "ml4gw.nn.resnet.resnet_1d.BasicBlock.forward"]], "forward() (ml4gw.nn.resnet.resnet_1d.bottleneck method)": [[6, "ml4gw.nn.resnet.resnet_1d.Bottleneck.forward"]], "forward() (ml4gw.nn.resnet.resnet_1d.resnet1d method)": [[6, "ml4gw.nn.resnet.resnet_1d.ResNet1D.forward"]], "forward() (ml4gw.nn.resnet.resnet_2d.basicblock method)": [[6, "ml4gw.nn.resnet.resnet_2d.BasicBlock.forward"]], "forward() (ml4gw.nn.resnet.resnet_2d.bottleneck method)": [[6, "ml4gw.nn.resnet.resnet_2d.Bottleneck.forward"]], "forward() (ml4gw.nn.resnet.resnet_2d.resnet2d method)": [[6, "ml4gw.nn.resnet.resnet_2d.ResNet2D.forward"]], "ml4gw.nn.resnet": [[6, "module-ml4gw.nn.resnet"]], "ml4gw.nn.resnet.resnet_1d": [[6, "module-ml4gw.nn.resnet.resnet_1d"]], "ml4gw.nn.resnet.resnet_2d": [[6, "module-ml4gw.nn.resnet.resnet_2d"]], "onlineaverager (class in ml4gw.nn.streaming.online_average)": [[7, "ml4gw.nn.streaming.online_average.OnlineAverager"]], "snapshotter (class in ml4gw.nn.streaming.snapshotter)": [[7, "ml4gw.nn.streaming.snapshotter.Snapshotter"]], "forward() (ml4gw.nn.streaming.online_average.onlineaverager method)": [[7, "ml4gw.nn.streaming.online_average.OnlineAverager.forward"]], "forward() (ml4gw.nn.streaming.snapshotter.snapshotter method)": [[7, "ml4gw.nn.streaming.snapshotter.Snapshotter.forward"]], "get_initial_state() (ml4gw.nn.streaming.online_average.onlineaverager method)": [[7, "ml4gw.nn.streaming.online_average.OnlineAverager.get_initial_state"]], "get_initial_state() (ml4gw.nn.streaming.snapshotter.snapshotter method)": [[7, "ml4gw.nn.streaming.snapshotter.Snapshotter.get_initial_state"]], "ml4gw.nn.streaming": [[7, "module-ml4gw.nn.streaming"]], "ml4gw.nn.streaming.online_average": [[7, "module-ml4gw.nn.streaming.online_average"]], "ml4gw.nn.streaming.snapshotter": [[7, "module-ml4gw.nn.streaming.snapshotter"]], "channelwisescaler (class in ml4gw.transforms.scaler)": [[8, "ml4gw.transforms.scaler.ChannelWiseScaler"]], "fittablespectraltransform (class in ml4gw.transforms.transform)": [[8, "ml4gw.transforms.transform.FittableSpectralTransform"]], "fittabletransform (class in ml4gw.transforms.transform)": [[8, "ml4gw.transforms.transform.FittableTransform"]], "fixedwhiten (class in ml4gw.transforms.whitening)": [[8, "ml4gw.transforms.whitening.FixedWhiten"]], "multiresolutionspectrogram (class in ml4gw.transforms.spectrogram)": [[8, "ml4gw.transforms.spectrogram.MultiResolutionSpectrogram"]], "shiftedpearsoncorrelation (class in ml4gw.transforms.pearson)": [[8, "ml4gw.transforms.pearson.ShiftedPearsonCorrelation"]], "snrrescaler (class in ml4gw.transforms.snr_rescaler)": [[8, "ml4gw.transforms.snr_rescaler.SnrRescaler"]], "spectraldensity (class in ml4gw.transforms.spectral)": [[8, "ml4gw.transforms.spectral.SpectralDensity"]], "waveformprojector (class in ml4gw.transforms.waveforms)": [[8, "ml4gw.transforms.waveforms.WaveformProjector"]], "waveformsampler (class in ml4gw.transforms.waveforms)": [[8, "ml4gw.transforms.waveforms.WaveformSampler"]], "whiten (class in ml4gw.transforms.whitening)": [[8, "ml4gw.transforms.whitening.Whiten"]], "build() (ml4gw.transforms.transform.fittabletransform method)": [[8, "ml4gw.transforms.transform.FittableTransform.build"]], "fit() (ml4gw.transforms.scaler.channelwisescaler method)": [[8, "ml4gw.transforms.scaler.ChannelWiseScaler.fit"]], "fit() (ml4gw.transforms.snr_rescaler.snrrescaler method)": [[8, "ml4gw.transforms.snr_rescaler.SnrRescaler.fit"]], "fit() (ml4gw.transforms.whitening.fixedwhiten method)": [[8, "ml4gw.transforms.whitening.FixedWhiten.fit"]], "forward() (ml4gw.transforms.pearson.shiftedpearsoncorrelation method)": [[8, "ml4gw.transforms.pearson.ShiftedPearsonCorrelation.forward"]], "forward() (ml4gw.transforms.scaler.channelwisescaler method)": [[8, "ml4gw.transforms.scaler.ChannelWiseScaler.forward"]], "forward() (ml4gw.transforms.snr_rescaler.snrrescaler method)": [[8, "ml4gw.transforms.snr_rescaler.SnrRescaler.forward"]], "forward() (ml4gw.transforms.spectral.spectraldensity method)": [[8, "ml4gw.transforms.spectral.SpectralDensity.forward"]], "forward() (ml4gw.transforms.spectrogram.multiresolutionspectrogram method)": [[8, "ml4gw.transforms.spectrogram.MultiResolutionSpectrogram.forward"]], "forward() (ml4gw.transforms.waveforms.waveformprojector method)": [[8, "ml4gw.transforms.waveforms.WaveformProjector.forward"]], "forward() (ml4gw.transforms.waveforms.waveformsampler method)": [[8, "ml4gw.transforms.waveforms.WaveformSampler.forward"]], "forward() (ml4gw.transforms.whitening.fixedwhiten method)": [[8, "ml4gw.transforms.whitening.FixedWhiten.forward"]], "forward() (ml4gw.transforms.whitening.whiten method)": [[8, "ml4gw.transforms.whitening.Whiten.forward"]], "ml4gw.transforms": [[8, "module-ml4gw.transforms"]], "ml4gw.transforms.pearson": [[8, "module-ml4gw.transforms.pearson"]], "ml4gw.transforms.scaler": [[8, "module-ml4gw.transforms.scaler"]], "ml4gw.transforms.snr_rescaler": [[8, "module-ml4gw.transforms.snr_rescaler"]], "ml4gw.transforms.spectral": [[8, "module-ml4gw.transforms.spectral"]], "ml4gw.transforms.spectrogram": [[8, "module-ml4gw.transforms.spectrogram"]], "ml4gw.transforms.transform": [[8, "module-ml4gw.transforms.transform"]], "ml4gw.transforms.waveforms": [[8, "module-ml4gw.transforms.waveforms"]], "ml4gw.transforms.whitening": [[8, "module-ml4gw.transforms.whitening"]], "normalize_psd() (ml4gw.transforms.transform.fittablespectraltransform method)": [[8, "ml4gw.transforms.transform.FittableSpectralTransform.normalize_psd"]], "ampintcolfitcoeff() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.AmpIntColFitCoeff"]], "finalspin0815() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.FinalSpin0815"]], "gamma (in module ml4gw.waveforms.taylorf2)": [[9, "ml4gw.waveforms.taylorf2.GAMMA"]], "imrphenomd() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.IMRPhenomD"]], "mpc_sec (in module ml4gw.waveforms.taylorf2)": [[9, "ml4gw.waveforms.taylorf2.MPC_SEC"]], "msun_si (in module ml4gw.waveforms.taylorf2)": [[9, "ml4gw.waveforms.taylorf2.MSUN_SI"]], "mtsun_si (in module ml4gw.waveforms.taylorf2)": [[9, "ml4gw.waveforms.taylorf2.MTSUN_SI"]], "pi (in module ml4gw.waveforms.taylorf2)": [[9, "ml4gw.waveforms.taylorf2.PI"]], "parametersampler (class in ml4gw.waveforms.generator)": [[9, "ml4gw.waveforms.generator.ParameterSampler"]], "phenominternal_eradrational0815() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.PhenomInternal_EradRational0815"]], "sinegaussian (class in ml4gw.waveforms.sine_gaussian)": [[9, "ml4gw.waveforms.sine_gaussian.SineGaussian"]], "taylorf2() (in module ml4gw.waveforms.taylorf2)": [[9, "ml4gw.waveforms.taylorf2.TaylorF2"]], "waveformgenerator (class in ml4gw.waveforms.generator)": [[9, "ml4gw.waveforms.generator.WaveformGenerator"]], "alpha1fit() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.alpha1Fit"]], "alpha2fit() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.alpha2Fit"]], "alpha3fit() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.alpha3Fit"]], "alpha4fit() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.alpha4Fit"]], "alpha5fit() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.alpha5Fit"]], "beta1fit() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.beta1Fit"]], "beta2fit() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.beta2Fit"]], "beta3fit() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.beta3Fit"]], "chipn() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.chiPN"]], "delta_values() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.delta_values"]], "fmaxcalc() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.fmaxCalc"]], "forward() (ml4gw.waveforms.generator.parametersampler method)": [[9, "ml4gw.waveforms.generator.ParameterSampler.forward"]], "forward() (ml4gw.waveforms.generator.waveformgenerator method)": [[9, "ml4gw.waveforms.generator.WaveformGenerator.forward"]], "fring_fdamp() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.fring_fdamp"]], "gamma1_fun() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.gamma1_fun"]], "gamma2_fun() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.gamma2_fun"]], "gamma3_fun() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.gamma3_fun"]], "ml4gw.waveforms": [[9, "module-ml4gw.waveforms"]], "ml4gw.waveforms.generator": [[9, "module-ml4gw.waveforms.generator"]], "ml4gw.waveforms.phenom_d": [[9, "module-ml4gw.waveforms.phenom_d"]], "ml4gw.waveforms.phenom_d_data": [[9, "module-ml4gw.waveforms.phenom_d_data"]], "ml4gw.waveforms.sine_gaussian": [[9, "module-ml4gw.waveforms.sine_gaussian"]], "ml4gw.waveforms.taylorf2": [[9, "module-ml4gw.waveforms.taylorf2"]], "phenom_d_amp() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.phenom_d_amp"]], "phenom_d_htilde() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.phenom_d_htilde"]], "phenom_d_inspiral_amp() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.phenom_d_inspiral_amp"]], "phenom_d_inspiral_phase() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.phenom_d_inspiral_phase"]], "phenom_d_int_amp() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.phenom_d_int_amp"]], "phenom_d_int_phase() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.phenom_d_int_phase"]], "phenom_d_mrd_amp() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.phenom_d_mrd_amp"]], "phenom_d_mrd_phase() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.phenom_d_mrd_phase"]], "phenom_d_phase() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.phenom_d_phase"]], "rho1_fun() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.rho1_fun"]], "rho2_fun() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.rho2_fun"]], "rho3_fun() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.rho3_fun"]], "semi_major_minor_from_e() (in module ml4gw.waveforms.sine_gaussian)": [[9, "ml4gw.waveforms.sine_gaussian.semi_major_minor_from_e"]], "sigma1fit() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.sigma1Fit"]], "sigma2fit() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.sigma2Fit"]], "sigma3fit() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.sigma3Fit"]], "sigma4fit() (in module ml4gw.waveforms.phenom_d)": [[9, "ml4gw.waveforms.phenom_d.sigma4Fit"]], "taylorf2_amplitude() (in module ml4gw.waveforms.taylorf2)": [[9, "ml4gw.waveforms.taylorf2.taylorf2_amplitude"]], "taylorf2_htilde() (in module ml4gw.waveforms.taylorf2)": [[9, "ml4gw.waveforms.taylorf2.taylorf2_htilde"]], "taylorf2_phase() (in module ml4gw.waveforms.taylorf2)": [[9, "ml4gw.waveforms.taylorf2.taylorf2_phase"]]}})